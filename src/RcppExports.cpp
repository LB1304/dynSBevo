// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Update_Field
arma::field<arma::cube> Update_Field(arma::field<arma::cube> Field, arma::cube New_Slice, int n);
RcppExport SEXP _dynSBevo_Update_Field(SEXP FieldSEXP, SEXP New_SliceSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type Field(FieldSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type New_Slice(New_SliceSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(Update_Field(Field, New_Slice, n));
    return rcpp_result_gen;
END_RCPP
}
// Create_Field
arma::field<arma::cube> Create_Field(int N, int d1, int d2, int d3);
RcppExport SEXP _dynSBevo_Create_Field(SEXP NSEXP, SEXP d1SEXP, SEXP d2SEXP, SEXP d3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type d1(d1SEXP);
    Rcpp::traits::input_parameter< int >::type d2(d2SEXP);
    Rcpp::traits::input_parameter< int >::type d3(d3SEXP);
    rcpp_result_gen = Rcpp::wrap(Create_Field(N, d1, d2, d3));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_CheckConvergence
bool dynSB_CheckConvergence(double J, double J_old, arma::colvec piv, arma::mat Pi, arma::mat B, arma::colvec piv_old, arma::mat Pi_old, arma::mat B_old, int it, double tol_lk, double tol_theta, int maxit);
RcppExport SEXP _dynSBevo_dynSB_CheckConvergence(SEXP JSEXP, SEXP J_oldSEXP, SEXP pivSEXP, SEXP PiSEXP, SEXP BSEXP, SEXP piv_oldSEXP, SEXP Pi_oldSEXP, SEXP B_oldSEXP, SEXP itSEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type J(JSEXP);
    Rcpp::traits::input_parameter< double >::type J_old(J_oldSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type piv(pivSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type piv_old(piv_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi_old(Pi_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B_old(B_oldSEXP);
    Rcpp::traits::input_parameter< int >::type it(itSEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_CheckConvergence(J, J_old, piv, Pi, B, piv_old, Pi_old, B_old, it, tol_lk, tol_theta, maxit));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_compute_ELBO
double dynSB_compute_ELBO(arma::cube Y, arma::colvec piv, arma::mat Pi, arma::mat B, arma::mat Tau1, arma::field<arma::cube> TAU, arma::cube Taum, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_compute_ELBO(SEXP YSEXP, SEXP pivSEXP, SEXP PiSEXP, SEXP BSEXP, SEXP Tau1SEXP, SEXP TAUSEXP, SEXP TaumSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type piv(pivSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Tau1(Tau1SEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Taum(TaumSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_compute_ELBO(Y, piv, Pi, B, Tau1, TAU, Taum, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_compute_derivatives
Rcpp::List dynSB_compute_derivatives(arma::mat Tau1, arma::field<arma::cube> TAU, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_compute_derivatives(SEXP Tau1SEXP, SEXP TAUSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Tau1(Tau1SEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_compute_derivatives(Tau1, TAU, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Initial_Random
Rcpp::List dynSB_Initial_Random(int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_Initial_Random(SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Initial_Random(n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Initial_Deterministic
Rcpp::List dynSB_Initial_Deterministic(arma::cube Y, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_Initial_Deterministic(SEXP YSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Initial_Deterministic(Y, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_VE_step
Rcpp::List dynSB_VE_step(arma::cube Y, arma::colvec piv, arma::mat Pi, arma::mat B, arma::mat Tau1, arma::field<arma::cube> TAU, arma::cube Taum, arma::field<arma::mat> d1Taum, arma::field<arma::cube> d2Taum, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_VE_step(SEXP YSEXP, SEXP pivSEXP, SEXP PiSEXP, SEXP BSEXP, SEXP Tau1SEXP, SEXP TAUSEXP, SEXP TaumSEXP, SEXP d1TaumSEXP, SEXP d2TaumSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type piv(pivSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Tau1(Tau1SEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Taum(TaumSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type d1Taum(d1TaumSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type d2Taum(d2TaumSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_VE_step(Y, piv, Pi, B, Tau1, TAU, Taum, d1Taum, d2Taum, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_M_step
Rcpp::List dynSB_M_step(arma::cube Y, arma::mat Tau1, arma::field<arma::cube> TAU, arma::cube Taum, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_M_step(SEXP YSEXP, SEXP Tau1SEXP, SEXP TAUSEXP, SEXP TaumSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Tau1(Tau1SEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Taum(TaumSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_M_step(Y, Tau1, TAU, Taum, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_compute_LogLik
double dynSB_compute_LogLik(arma::cube Y, arma::colvec piv, arma::mat Pi, arma::mat B, arma::umat V, int n, int k, int TT);
RcppExport SEXP _dynSBevo_dynSB_compute_LogLik(SEXP YSEXP, SEXP pivSEXP, SEXP PiSEXP, SEXP BSEXP, SEXP VSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type piv(pivSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_compute_LogLik(Y, piv, Pi, B, V, n, k, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_compute_Classification
arma::umat dynSB_compute_Classification(arma::cube Taum, int n, int TT);
RcppExport SEXP _dynSBevo_dynSB_compute_Classification(SEXP TaumSEXP, SEXP nSEXP, SEXP TTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Taum(TaumSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_compute_Classification(Taum, n, TT));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_VEM
Rcpp::List dynSB_VEM(arma::cube Y, int k, Rcpp::List sv, double tol_lk, double tol_theta, int maxit);
RcppExport SEXP _dynSBevo_dynSB_VEM(SEXP YSEXP, SEXP kSEXP, SEXP svSEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sv(svSEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_VEM(Y, k, sv, tol_lk, tol_theta, maxit));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Update_step
Rcpp::List dynSB_Update_step(arma::cube Y, int k, Rcpp::List sv, double tol_lk, double tol_theta, int maxit);
RcppExport SEXP _dynSBevo_dynSB_Update_step(SEXP YSEXP, SEXP kSEXP, SEXP svSEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sv(svSEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Update_step(Y, k, sv, tol_lk, tol_theta, maxit));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_LastUpdate_step
Rcpp::List dynSB_LastUpdate_step(arma::cube Y, int k, Rcpp::List sv, double tol_lk, double tol_theta, int maxit);
RcppExport SEXP _dynSBevo_dynSB_LastUpdate_step(SEXP YSEXP, SEXP kSEXP, SEXP svSEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sv(svSEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_LastUpdate_step(Y, k, sv, tol_lk, tol_theta, maxit));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Mutation_step
Rcpp::List dynSB_Mutation_step(arma::mat Tau1, arma::field<arma::cube> TAU, int n, int k, int TT, double LMP, double UMP);
RcppExport SEXP _dynSBevo_dynSB_Mutation_step(SEXP Tau1SEXP, SEXP TAUSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP, SEXP LMPSEXP, SEXP UMPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Tau1(Tau1SEXP);
    Rcpp::traits::input_parameter< arma::field<arma::cube> >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    Rcpp::traits::input_parameter< double >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< double >::type UMP(UMPSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Mutation_step(Tau1, TAU, n, k, TT, LMP, UMP));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_TotalSelection_step
Rcpp::List dynSB_TotalSelection_step(Rcpp::List P_a, Rcpp::List P_b, Rcpp::List P_c, arma::rowvec fit_a, arma::rowvec fit_b, arma::rowvec fit_c);
RcppExport SEXP _dynSBevo_dynSB_TotalSelection_step(SEXP P_aSEXP, SEXP P_bSEXP, SEXP P_cSEXP, SEXP fit_aSEXP, SEXP fit_bSEXP, SEXP fit_cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type P_a(P_aSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type P_b(P_bSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type P_c(P_cSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type fit_a(fit_aSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type fit_b(fit_bSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type fit_c(fit_cSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_TotalSelection_step(P_a, P_b, P_c, fit_a, fit_b, fit_c));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Selection_step
Rcpp::List dynSB_Selection_step(Rcpp::List P_Old, Rcpp::List P_New, arma::rowvec fit_Old, arma::rowvec fit_New, bool keep_best);
RcppExport SEXP _dynSBevo_dynSB_Selection_step(SEXP P_OldSEXP, SEXP P_NewSEXP, SEXP fit_OldSEXP, SEXP fit_NewSEXP, SEXP keep_bestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type P_Old(P_OldSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type P_New(P_NewSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type fit_Old(fit_OldSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type fit_New(fit_NewSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_best(keep_bestSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Selection_step(P_Old, P_New, fit_Old, fit_New, keep_best));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Random_Initialization_step
Rcpp::List dynSB_Random_Initialization_step(arma::cube Y, int n, int k, int TT, int n_parents);
RcppExport SEXP _dynSBevo_dynSB_Random_Initialization_step(SEXP YSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP, SEXP n_parentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    Rcpp::traits::input_parameter< int >::type n_parents(n_parentsSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Random_Initialization_step(Y, n, k, TT, n_parents));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_Kmeans_Initialization_step
Rcpp::List dynSB_Kmeans_Initialization_step(arma::cube Y, int n, int k, int TT, int n_parents, double LMP, double UMP);
RcppExport SEXP _dynSBevo_dynSB_Kmeans_Initialization_step(SEXP YSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP, SEXP n_parentsSEXP, SEXP LMPSEXP, SEXP UMPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    Rcpp::traits::input_parameter< int >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< double >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< double >::type UMP(UMPSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_Kmeans_Initialization_step(Y, n, k, TT, n_parents, LMP, UMP));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_SBM_Initialization_step
Rcpp::List dynSB_SBM_Initialization_step(arma::cube Y, int n, int k, int TT, int n_parents, double LMP, double UMP);
RcppExport SEXP _dynSBevo_dynSB_SBM_Initialization_step(SEXP YSEXP, SEXP nSEXP, SEXP kSEXP, SEXP TTSEXP, SEXP n_parentsSEXP, SEXP LMPSEXP, SEXP UMPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    Rcpp::traits::input_parameter< int >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< double >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< double >::type UMP(UMPSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_SBM_Initialization_step(Y, n, k, TT, n_parents, LMP, UMP));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_EVEM_step
Rcpp::List dynSB_EVEM_step(arma::cube Y, int k, Rcpp::List PV1, double tol_lk, double tol_theta, int n_parents, double LMP, double UMP, int R, int n, int TT, bool keep_best);
RcppExport SEXP _dynSBevo_dynSB_EVEM_step(SEXP YSEXP, SEXP kSEXP, SEXP PV1SEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP n_parentsSEXP, SEXP LMPSEXP, SEXP UMPSEXP, SEXP RSEXP, SEXP nSEXP, SEXP TTSEXP, SEXP keep_bestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type PV1(PV1SEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< double >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< double >::type UMP(UMPSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type TT(TTSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_best(keep_bestSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_EVEM_step(Y, k, PV1, tol_lk, tol_theta, n_parents, LMP, UMP, R, n, TT, keep_best));
    return rcpp_result_gen;
END_RCPP
}
// dynSB_EVEM
Rcpp::List dynSB_EVEM(arma::cube Y, int k, double tol_lk, double tol_theta, int maxit, int n_parents, double LMP, double UMP, int R);
RcppExport SEXP _dynSBevo_dynSB_EVEM(SEXP YSEXP, SEXP kSEXP, SEXP tol_lkSEXP, SEXP tol_thetaSEXP, SEXP maxitSEXP, SEXP n_parentsSEXP, SEXP LMPSEXP, SEXP UMPSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type tol_lk(tol_lkSEXP);
    Rcpp::traits::input_parameter< double >::type tol_theta(tol_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< int >::type n_parents(n_parentsSEXP);
    Rcpp::traits::input_parameter< double >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< double >::type UMP(UMPSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(dynSB_EVEM(Y, k, tol_lk, tol_theta, maxit, n_parents, LMP, UMP, R));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dynSBevo_Update_Field", (DL_FUNC) &_dynSBevo_Update_Field, 3},
    {"_dynSBevo_Create_Field", (DL_FUNC) &_dynSBevo_Create_Field, 4},
    {"_dynSBevo_dynSB_CheckConvergence", (DL_FUNC) &_dynSBevo_dynSB_CheckConvergence, 12},
    {"_dynSBevo_dynSB_compute_ELBO", (DL_FUNC) &_dynSBevo_dynSB_compute_ELBO, 10},
    {"_dynSBevo_dynSB_compute_derivatives", (DL_FUNC) &_dynSBevo_dynSB_compute_derivatives, 5},
    {"_dynSBevo_dynSB_Initial_Random", (DL_FUNC) &_dynSBevo_dynSB_Initial_Random, 3},
    {"_dynSBevo_dynSB_Initial_Deterministic", (DL_FUNC) &_dynSBevo_dynSB_Initial_Deterministic, 4},
    {"_dynSBevo_dynSB_VE_step", (DL_FUNC) &_dynSBevo_dynSB_VE_step, 12},
    {"_dynSBevo_dynSB_M_step", (DL_FUNC) &_dynSBevo_dynSB_M_step, 7},
    {"_dynSBevo_dynSB_compute_LogLik", (DL_FUNC) &_dynSBevo_dynSB_compute_LogLik, 8},
    {"_dynSBevo_dynSB_compute_Classification", (DL_FUNC) &_dynSBevo_dynSB_compute_Classification, 3},
    {"_dynSBevo_dynSB_VEM", (DL_FUNC) &_dynSBevo_dynSB_VEM, 6},
    {"_dynSBevo_dynSB_Update_step", (DL_FUNC) &_dynSBevo_dynSB_Update_step, 6},
    {"_dynSBevo_dynSB_LastUpdate_step", (DL_FUNC) &_dynSBevo_dynSB_LastUpdate_step, 6},
    {"_dynSBevo_dynSB_Mutation_step", (DL_FUNC) &_dynSBevo_dynSB_Mutation_step, 7},
    {"_dynSBevo_dynSB_TotalSelection_step", (DL_FUNC) &_dynSBevo_dynSB_TotalSelection_step, 6},
    {"_dynSBevo_dynSB_Selection_step", (DL_FUNC) &_dynSBevo_dynSB_Selection_step, 5},
    {"_dynSBevo_dynSB_Random_Initialization_step", (DL_FUNC) &_dynSBevo_dynSB_Random_Initialization_step, 5},
    {"_dynSBevo_dynSB_Kmeans_Initialization_step", (DL_FUNC) &_dynSBevo_dynSB_Kmeans_Initialization_step, 7},
    {"_dynSBevo_dynSB_SBM_Initialization_step", (DL_FUNC) &_dynSBevo_dynSB_SBM_Initialization_step, 7},
    {"_dynSBevo_dynSB_EVEM_step", (DL_FUNC) &_dynSBevo_dynSB_EVEM_step, 12},
    {"_dynSBevo_dynSB_EVEM", (DL_FUNC) &_dynSBevo_dynSB_EVEM, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_dynSBevo(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
